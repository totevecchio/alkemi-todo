{"ast":null,"code":"var _jsxFileName = \"/Users/sebastianvecchio/Documents/alkemi-front/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useHistory, useNavigate } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormFeedback, FormGroup, FormText, Label, Input, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport { Redirect, withRouter } from \"react-router\";\nimport bcrypt from \"bcryptjs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    comfirmedPassword: \"\"\n  });\n  const [resgistered, setRegistered] = useState(false);\n  const [userExists, setUserExists] = useState(false);\n  useEffect(() => {\n    axios.get(\"http://localhost:7000/users\").then(res => {\n      setUsers(res.data);\n    }).catch(error => alert(error));\n  }, []);\n\n  const handleChange = evt => {\n    const name = evt.target.name;\n    const value = evt.target.type === \"checkbox\" ? evt.target.checked : evt.target.value;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const checkUserExists = () => {\n    users.map(data => {\n      if (user.username === data.username) {\n        setUserExists(true);\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    if (users === \"Not result\") {\n      if (user.password === user.comfirmedPassword) {\n        var salt = bcrypt.genSaltSync(10);\n        var hash = bcrypt.hashSync(user.password, salt);\n        axios({\n          method: \"post\",\n          url: \"http://localhost:7000/users/add\",\n          data: {\n            username: user.username,\n            password: hash\n          }\n        }).then(res => {\n          console.log(res.status);\n        }).catch(error => console.log(error));\n      }\n    } else {\n      checkUserExists(); //   if (userExists === false) {\n      //     if (user.password === user.comfirmedPassword) {\n      //       var salt = bcrypt.genSaltSync(10);\n      //       var hash = bcrypt.hashSync(user.password, salt);\n      //       axios({\n      //         method: \"post\",\n      //         url: \"http://localhost:7000/users/add\",\n      //         data: {\n      //           username: user.username,\n      //           password: hash,\n      //         },\n      //       })\n      //         .then((res) => {\n      //           if (res.status === 200) {\n      //             console.log(res.status);\n      //             setRegistered(true);\n      //           }\n      //         })\n      //         .catch((error) => console.log(error));\n      //     }\n      //   } else {\n      //     alert(\"El usuriario ya existe\");\n      //   }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), !resgistered ? /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form\",\n      children: [/*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"username\",\n          name: \"username\",\n          id: \"exampleUsername\",\n          placeholder: \"username\",\n          required: true,\n          value: user.username,\n          onChange: e => {\n            handleChange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"examplePassword\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"password\",\n          id: \"examplePassword\",\n          placeholder: \"********\",\n          required: true,\n          value: user.password,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Label, {\n          for: \"examplePassword\",\n          children: \"Comfirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          name: \"comfirmedPassword\",\n          id: \"examplePassword\",\n          placeholder: \"********\",\n          required: true,\n          value: user.comfirmedPassword,\n          onChange: e => handleChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"B9l1wft3wzHBTZh4iqvzXKrfED4=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/sebastianvecchio/Documents/alkemi-front/src/components/Register.js"],"names":["React","useEffect","useState","useHistory","useNavigate","Form","FormFeedback","FormGroup","FormText","Label","Input","Button","axios","Redirect","withRouter","bcrypt","Register","users","setUsers","user","setUser","username","password","comfirmedPassword","resgistered","setRegistered","userExists","setUserExists","get","then","res","data","catch","error","alert","handleChange","evt","name","target","value","type","checked","checkUserExists","map","handleSubmit","e","salt","genSaltSync","hash","hashSync","method","url","console","log","status"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useHistory, useNavigate } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {\n  Form,\n  FormFeedback,\n  FormGroup,\n  FormText,\n  Label,\n  Input,\n  Button,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport { Redirect, withRouter } from \"react-router\";\nimport bcrypt from \"bcryptjs\";\n\nconst Register = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    comfirmedPassword: \"\",\n  });\n  const [resgistered, setRegistered] = useState(false);\n  const [userExists, setUserExists] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:7000/users\")\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch((error) => alert(error));\n  }, []);\n\n  const handleChange = (evt) => {\n    const name = evt.target.name;\n    const value =\n      evt.target.type === \"checkbox\" ? evt.target.checked : evt.target.value;\n    setUser({\n      ...user,\n      [name]: value,\n    });\n  };\n\n  const checkUserExists = () => {\n    users.map((data) => {\n      if (user.username === data.username) {\n        setUserExists(true);\n      }\n    });\n  };\n\n  const handleSubmit = (e) => {\n    if (users === \"Not result\") {\n      if (user.password === user.comfirmedPassword) {\n        var salt = bcrypt.genSaltSync(10);\n        var hash = bcrypt.hashSync(user.password, salt);\n        axios({\n          method: \"post\",\n          url: \"http://localhost:7000/users/add\",\n          data: {\n            username: user.username,\n            password: hash,\n          },\n        })\n          .then((res) => {\n            console.log(res.status);\n          })\n          .catch((error) => console.log(error));\n      }\n    } else {\n      checkUserExists()\n    //   if (userExists === false) {\n    //     if (user.password === user.comfirmedPassword) {\n    //       var salt = bcrypt.genSaltSync(10);\n    //       var hash = bcrypt.hashSync(user.password, salt);\n    //       axios({\n    //         method: \"post\",\n    //         url: \"http://localhost:7000/users/add\",\n    //         data: {\n    //           username: user.username,\n    //           password: hash,\n    //         },\n    //       })\n    //         .then((res) => {\n    //           if (res.status === 200) {\n    //             console.log(res.status);\n    //             setRegistered(true);\n    //           }\n    //         })\n    //         .catch((error) => console.log(error));\n    //     }\n    //   } else {\n    //     alert(\"El usuriario ya existe\");\n    //   }\n    }\n  };\n\n  return (\n    <div className=\"loginContainer\">\n      <h2>Register</h2>\n      {!resgistered ? (\n        <Form className=\"form\">\n          <FormGroup>\n            <Label>Username</Label>\n            <Input\n              type=\"username\"\n              name=\"username\"\n              id=\"exampleUsername\"\n              placeholder=\"username\"\n              required\n              value={user.username}\n              onChange={(e) => {\n                handleChange(e);\n              }}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword\"\n              placeholder=\"********\"\n              required\n              value={user.password}\n              onChange={(e) => handleChange(e)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Comfirm Password</Label>\n            <Input\n              type=\"password\"\n              name=\"comfirmedPassword\"\n              id=\"examplePassword\"\n              placeholder=\"********\"\n              required\n              value={user.comfirmedPassword}\n              onChange={(e) => handleChange(e)}\n            />\n          </FormGroup>\n          <Button color=\"primary\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Form>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </div>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}
[{"/Users/sebastianvecchio/Documents/alkemi-front/src/index.js":"1","/Users/sebastianvecchio/Documents/alkemi-front/src/App.js":"2","/Users/sebastianvecchio/Documents/alkemi-front/src/components/register/Register.js":"3","/Users/sebastianvecchio/Documents/alkemi-front/src/components/home/Home.js":"4","/Users/sebastianvecchio/Documents/alkemi-front/src/components/login/Login.js":"5","/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/index.js":"6","/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/App.js":"7","/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/components/register/Register.js":"8","/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/components/home/Home.js":"9","/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/components/login/Login.js":"10"},{"size":220,"mtime":1634247422016,"results":"11","hashOfConfig":"12"},{"size":686,"mtime":1634835461911,"results":"13","hashOfConfig":"12"},{"size":4298,"mtime":1634834605849,"results":"14","hashOfConfig":"12"},{"size":9085,"mtime":1634835439718,"results":"15","hashOfConfig":"12"},{"size":2895,"mtime":1634836252785,"results":"16","hashOfConfig":"12"},{"size":220,"mtime":1634247422016,"results":"17","hashOfConfig":"18"},{"size":686,"mtime":1634835461911,"results":"19","hashOfConfig":"18"},{"size":4298,"mtime":1634834605849,"results":"20","hashOfConfig":"18"},{"size":9085,"mtime":1634835439718,"results":"21","hashOfConfig":"18"},{"size":2895,"mtime":1634836252785,"results":"22","hashOfConfig":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"17fsda5",{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dfl9pk",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sebastianvecchio/Documents/alkemi-front/src/index.js",[],["46","47"],"/Users/sebastianvecchio/Documents/alkemi-front/src/App.js",[],"/Users/sebastianvecchio/Documents/alkemi-front/src/components/register/Register.js",["48","49"],"import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Form, FormGroup, Label, Input, Button } from \"reactstrap\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router\";\nimport bcrypt from \"bcryptjs\";\nimport './register.css'\n\nconst Register = () => {\n  const [users, setUsers] = useState([]);\n  const [user, setUser] = useState({\n    username: \"\",\n    password: \"\",\n    comfirmedPassword: \"\",\n  });\n  const [resgistered, setRegistered] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:7000/users\")\n      .then((res) => {\n        setUsers(res.data);\n      })\n      .catch((error) => alert(error));\n  }, []);\n\n  const handleChange = (evt) => {\n    const name = evt.target.name;\n    const value =\n      evt.target.type === \"checkbox\" ? evt.target.checked : evt.target.value;\n    setUser({\n      ...user,\n      [name]: value,\n    });\n  };\n\n  const validateInput = ({ user }) => {\n    if (!user.username.trim()) {\n      return false;\n    }\n    if (!user.password.trim()) {\n      return false;\n    }\n    if (!user.comfirmedPassword.trim()) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const validInput = validateInput({ user });\n\n    if (!validInput) {\n      alert(\"Complete todos los campos\");\n    } else {\n      if (users === \"Not result\") {\n        if (user.password === user.comfirmedPassword) {\n          var salt = bcrypt.genSaltSync(10);\n          var hash = bcrypt.hashSync(user.password, salt);\n          axios({\n            method: \"post\",\n            url: \"http://localhost:7000/users/add\",\n            data: {\n              username: user.username,\n              password: hash,\n            },\n          })\n            .then((res) => {\n              if (res.status === 200) {\n                setRegistered(true);\n              }\n            })\n            .catch((error) => console.log(error));\n        }\n      } else {\n        if (users.find((data) => user.username === data.username)) {\n          alert(\"El usuario ya existe\");\n        } else {\n          if (user.password === user.comfirmedPassword) {\n            var salt = bcrypt.genSaltSync(10);\n            var hash = bcrypt.hashSync(user.password, salt);\n            axios({\n              method: \"post\",\n              url: \"http://localhost:7000/users/add\",\n              data: {\n                username: user.username,\n                password: hash,\n              },\n            })\n              .then((res) => {\n                if (res.status === 200) {\n                  console.log(res.status);\n                  setRegistered(true);\n                }\n              })\n              .catch((error) => console.log(error));\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"loginContainer\">\n      <h2>Register</h2>\n      {!resgistered ? (\n        <Form className=\"form\">\n          <FormGroup>\n            <Label>Username</Label>\n            <Input\n              type=\"username\"\n              name=\"username\"\n              id=\"exampleUsername\"\n              placeholder=\"username\"\n              required\n              value={user.username}\n              onChange={(e) => {\n                handleChange(e);\n              }}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Password</Label>\n            <Input\n              type=\"password\"\n              name=\"password\"\n              id=\"examplePassword\"\n              placeholder=\"********\"\n              required\n              value={user.password}\n              onChange={(e) => handleChange(e)}\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"examplePassword\">Comfirm Password</Label>\n            <Input\n              type=\"password\"\n              name=\"comfirmedPassword\"\n              id=\"examplePassword\"\n              placeholder=\"********\"\n              required\n              value={user.comfirmedPassword}\n              onChange={(e) => handleChange(e)}\n            />\n          </FormGroup>\n          <Button color=\"primary\" onClick={handleSubmit}>\n            Submit\n          </Button>\n        </Form>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </div>\n  );\n};\n\nexport default Register;\n","/Users/sebastianvecchio/Documents/alkemi-front/src/components/home/Home.js",["50","51"],"import React, { useEffect, useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from \"moment\";\nimport {\n  Form,\n  Table,\n  Button,\n  Container,\n  Modal,\n  Input,\n  ModalBody,\n  ModalHeader,\n  FormGroup,\n  ModalFooter,\n} from \"reactstrap\";\nimport axios from \"axios\";\nimport './home.css'\n\nconst Home = () => {\n  const [db, setDb] = useState([]);\n  const [modalIncertar, setModalincertar] = useState(false);\n  const [modalEditar, setModalEditar] = useState(false);\n  const [update, setUpdate] = useState(false);\n  const [isEmpty, setIsEmpty] = useState(false);\n  const [dale, setDale] = useState(true);\n  const [data, setForm] = useState({\n    Concepto: \"\",\n    Monto: \"\",\n    Fecha: \"\",\n    Tipo: \"\",\n  });\n \n  let total = 0;\n  db.map((ele) => {\n    if (ele.Tipo === \"Salida\") {\n      return total += -Math.abs(ele.Monto)\n    } else {\n      return total += ele.Monto\n    }\n  });\n\n  const checkIfEmpty = () => {\n    if (db > 0) {\n      console.log(\"yes\");\n      setIsEmpty(true);\n    } else {\n      console.log(\"va\");\n      setIsEmpty(false);\n    }\n  };\n\n  useEffect(\n    (db) => {\n      axios\n        .get(\"http://localhost:7000/abm/10\")\n        .then((res) => {\n          setDb(res.data);\n        })\n        // .then(checkIfEmpty)\n        .catch((error) => alert(error));\n      setTimeout(() => {\n        if (db < 0) {\n          console.log(\"yes\");\n          setIsEmpty(true);\n        } else {\n          // console.log(db.length);\n\n          console.log(\"va\");\n          setIsEmpty(false);\n        }\n      }, 1000);\n    },\n    [modalIncertar, modalEditar, update, isEmpty, dale]\n  );\n\n  const handleIncert = () => {\n    console.log(data);\n    axios({\n      method: \"post\",\n      url: \"http://localhost:7000/abm/add\",\n      data: data,\n    })\n      .then((res) => {\n        console.log(res);\n      })\n      .then(setForm({\n        Concepto: \"\",\n        Monto: \"\",\n        Fecha: \"\",\n        Tipo: \"\",\n      }))\n      .then(setModalincertar(false))\n      .catch((error) => console.log(error));\n  };\n\n  const handleDelete = (id) => {\n    console.log(id);\n    axios({\n      method: \"delete\",\n      url: `http://localhost:7000/abm/delete/${id}`,\n    })\n      .then((res) => {\n        setUpdate(true);\n        console.log(res);\n      })\n      .then(setUpdate(false))\n      .catch((error) => alert(error));\n  };\n  const handleUpdate = (id) => {\n    axios({\n      method: \"put\",\n      url: `http://localhost:7000/abm/update/${id}`,\n      data: data,\n    })\n      .then((res) => {\n      })\n      .then(setModalEditar(false))\n      .then(setForm({\n        Concepto: \"\",\n        Monto: \"\",\n        Fecha: \"\",\n        Tipo: \"\",\n      }))\n      .catch((error) => alert(error));\n  };\n\n  const handleChange = (evt) => {\n    const name = evt.target.name;\n    const value =\n      evt.target.type === \"checkbox\" ? evt.target.checked : evt.target.value;\n    setForm({\n      ...data,\n      [name]: value,\n    });\n  };\n\n  const mostrarModalIncertar = () => {\n    setModalincertar(true);\n  };\n\n  const ocultarModalIncertar = () => {\n    setModalincertar(false);\n  };\n\n  const mostrarModalEditar = (data) => {\n    setModalEditar(true);\n    setForm(data);\n  };\n\n  const ocultarModalEditar = () => {\n    setModalEditar(false);\n  };\n\n  const cleanForm = () => {\n    setForm({\n      Concepto: \"\",\n      Monto: \"\",\n      Fecha: \"\",\n      Tipo: \"\",\n    })\n  }\n\n  return (\n    <>\n      <Container className='container'>\n        <div className=\"button_container col\">\n          <Button\n            color=\"success\"\n            onClick={mostrarModalIncertar}\n            className=\"incertar\"\n          >\n            New transaction\n          </Button>\n          <div className=\"total\">Balance: {total} $</div>\n        </div>\n        <Form>\n          <Table>\n            <thead>\n              <tr>\n                <th>Cocepto</th>\n                <th>Monto</th>\n                <th>Fecha</th>\n                <th>Tipo</th>\n                <th>Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              {dale ? (\n                db.map((data) => (\n                  <tr key={data.Id}>\n                    <td>{data.Concepto}</td>\n                    <td>{data.Monto + \"$\"}</td>\n                    <td>{moment(data.Fecha).format(\"YYYY-MM-DD\")}</td>\n                    <td>{data.Tipo}</td>\n                    <td>\n                      <Button\n                        color=\"primary\"\n                        onClick={(e) => mostrarModalEditar(data)}\n                        className='button'\n                      >\n                        Edit\n                      </Button>\n                      {\"  \"}\n                      <Button\n                        color=\"danger\"\n                        onClick={(e) => handleDelete(data.Id)}\n                        className='button'\n                      >\n                        Delete\n                      </Button>\n                    </td>\n                  </tr>\n                ))\n              ) : (\n                <></>\n              )}\n            </tbody>\n          </Table>\n        </Form>\n      </Container>\n      <Modal isOpen={modalIncertar}>\n        <ModalHeader>\n          <div>\n            <h3>Incertar Registro</h3>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <label>Id:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={data.Id}\n              readOnly\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>Concepto:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"Concepto\"\n              value={data.Concepto}\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>Monto:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={data.Monto}\n              name=\"Monto\"\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>Fecha:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={data.Fecha}\n              name=\"Fecha\"\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>Tipo:</label>\n            <Input\n              type=\"select\"\n              className=\"form-control\"\n              value={data.Tipo}\n              name=\"Tipo\"\n              onChange={handleChange}\n            >\n              <option name=\"Tipo\" value=\"\" hidden></option>\n              <option name=\"Tipo\" value=\"Entrada\">\n                Entrada\n              </option>\n              <option name=\"Tipo\" value=\"Salida\">\n                Salida\n              </option>\n            </Input>\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={handleIncert}>\n            Insertar\n          </Button>\n          <Button color=\"danger\" onClick={() => {ocultarModalIncertar() ; cleanForm();}}>\n            Cancelar\n          </Button>\n        </ModalFooter>\n      </Modal>\n\n      <Modal isOpen={modalEditar}>\n        <ModalHeader>\n          <div>\n            <h3>Editar Registro</h3>\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          <FormGroup>\n            <label>Id:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={data.Id}\n              readOnly\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>Concepto:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"Concepto\"\n              value={data.Concepto}\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>Monto:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={data.Monto}\n              name=\"Monto\"\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>Fecha:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={moment(data.Fecha).format(\"YYYY-MM-DD\")}\n              name=\"Fecha\"\n              onChange={handleChange}\n            />\n          </FormGroup>\n          <FormGroup>\n            <label>Tipo:</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={data.Tipo}\n              name=\"Tipo\"\n              readOnly\n            />\n          </FormGroup>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={(e) => handleUpdate(data.Id)}>\n            Editar\n          </Button>\n          <Button color=\"danger\" onClick={() => {ocultarModalEditar() ; cleanForm();}}>\n            Cancelar\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nexport default Home;\n","/Users/sebastianvecchio/Documents/alkemi-front/src/components/login/Login.js",[],"/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/index.js",[],"/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/App.js",[],"/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/components/register/Register.js",["52","53"],"/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/components/home/Home.js",["54","55"],"/Users/sebastianvecchio/Documents/alkemi-todo/alkemi-front/src/components/login/Login.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":81,"column":17,"nodeType":"62","messageId":"63","endLine":81,"endColumn":21},{"ruleId":"60","severity":1,"message":"64","line":82,"column":17,"nodeType":"62","messageId":"63","endLine":82,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":25,"column":16,"nodeType":"62","messageId":"67","endLine":25,"endColumn":23},{"ruleId":"65","severity":1,"message":"68","line":42,"column":9,"nodeType":"62","messageId":"67","endLine":42,"endColumn":21},{"ruleId":"60","severity":1,"message":"61","line":81,"column":17,"nodeType":"62","messageId":"63","endLine":81,"endColumn":21},{"ruleId":"60","severity":1,"message":"64","line":82,"column":17,"nodeType":"62","messageId":"63","endLine":82,"endColumn":21},{"ruleId":"65","severity":1,"message":"66","line":25,"column":16,"nodeType":"62","messageId":"67","endLine":25,"endColumn":23},{"ruleId":"65","severity":1,"message":"68","line":42,"column":9,"nodeType":"62","messageId":"67","endLine":42,"endColumn":21},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-redeclare","'salt' is already defined.","Identifier","redeclared","'hash' is already defined.","no-unused-vars","'setDale' is assigned a value but never used.","unusedVar","'checkIfEmpty' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]